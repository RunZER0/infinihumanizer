"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.1.
"""

try:
    from dotenv import load_dotenv
except Exception:  # package optional for offline
    def load_dotenv(*args, **kwargs):
        return None
load_dotenv()  # Load environment variables from .env

import os
import socket
from pathlib import Path
try:
    import dj_database_url
except Exception:
    dj_database_url = None  # Only needed in production

# Base directory
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY", "unsafe-dev-key")
PAYSTACK_PUBLIC_KEY = os.getenv("PAYSTACK_PUBLIC_KEY")
PAYSTACK_SECRET_KEY = os.getenv("PAYSTACK_SECRET_KEY")
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")
DEFAULT_FROM_EMAIL = os.getenv("DEFAULT_FROM_EMAIL", "Infiniai <noreply@infiniaihumanizer.live>")
DEBUG = os.getenv("DEBUG", "False") == "True"
OFFLINE_MODE = os.getenv("OFFLINE_MODE", "False") == "True"
ALLOWED_HOSTS = [
    'infinihumanizer.onrender.com',
    'infiniaihumanizer.live',
    'www.infiniaihumanizer.live',
    '127.0.0.1',
    'localhost',
    '192.168.0.105',
]

INSTALLED_APPS = [
    'core.apps.CoreConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',

    # Required by django-allauth
    'django.contrib.sites',

    # Allauth apps
    'allauth',
    'allauth.account',
    'allauth.socialaccount',  # Optional but harmless

    # Your apps
    'accounts',
    'humanizer',
]

SITE_ID = 1

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

ACCOUNT_EMAIL_VERIFICATION = 'mandatory'  # Still required
ACCOUNT_LOGIN_METHODS = {'email'}
ACCOUNT_SIGNUP_FIELDS = ['email*', 'password1*', 'password2*']

LOGIN_REDIRECT_URL = '/'
ACCOUNT_LOGOUT_REDIRECT_URL = '/accounts/login/'
ACCOUNT_ADAPTER = 'accounts.adapters.CustomAccountAdapter'
ACCOUNT_FORMS = {
    'login': 'accounts.forms.CustomLoginForm'
}

# Loosen auth in offline/local mode for easier testing
if OFFLINE_MODE or DEBUG:
    ACCOUNT_EMAIL_VERIFICATION = 'none'
    # Don't set deprecated settings in new django-allauth version
    # ACCOUNT_LOGIN_METHODS already set above

# MIDDLEWARE
MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',  # ✅ added this
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'allauth.account.middleware.AccountMiddleware',  # Required for django-allauth
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# URL Configuration
ROOT_URLCONF = 'core.urls'

# TEMPLATES
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'humanizer' / 'templates',
            BASE_DIR / 'accounts' / 'templates',
            BASE_DIR / "templates",  # Important
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI
WSGI_APPLICATION = 'core.wsgi.application'

# DATABASE
# Use lightweight SQLite when in DEBUG or OFFLINE mode for local/offline testing,
# otherwise fall back to DATABASE_URL (PostgreSQL in production).
if DEBUG or OFFLINE_MODE or not os.getenv("DATABASE_URL"):
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    if dj_database_url is None:
        raise RuntimeError("dj_database_url is required when not using SQLite/DEBUG/OFFLINE.")
    DATABASES = {
       'default': dj_database_url.config(
            default=os.getenv(
                "DATABASE_URL",
                "postgresql://postgres.lbgowbtsxonniutjxcmv:6mOO4TupU1bE82pr@aws-1-us-east-2.pooler.supabase.com:5432/postgres"
            )
        )
    }

# PASSWORD VALIDATORS
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# I18N
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# STATIC FILES
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
if DEBUG:
    STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'
else:
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
STATICFILES_DIRS = [ BASE_DIR / 'static' ]

# AUTH REDIRECTS
LOGIN_REDIRECT_URL = '/humanizer/'
LOGOUT_REDIRECT_URL = '/accounts/login/'
ACCOUNT_ADAPTER = 'accounts.adapters.CustomAccountAdapter'

# CUSTOM ENV VARS - AI Engine API Keys
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY", "")
ANTHROPIC_API_KEY = os.getenv("ANTHROPIC_API_KEY", "")
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY", "")
DEEPSEEK_API_KEY = os.getenv("DEEPSEEK_API_KEY", "")

# SECURITY OPTIONS
SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

# Override for local development / offline testing
if socket.gethostname() == 'localhost' or DEBUG or OFFLINE_MODE:
    SECURE_SSL_REDIRECT = False
    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE = False

# CSRF Trusted Origins
CSRF_TRUSTED_ORIGINS = [
    'https://infinihumanizer.onrender.com',
    'https://infiniaihumanizer.live',
    'https://www.infiniaihumanizer.live',
    'http://localhost:8000',
    'http://127.0.0.1:8000',
    'http://localhost:8001',
    'http://127.0.0.1:8001',
]

# Default Primary Key Field Type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ✅ EMAIL SETTINGS (using Brevo / Sendinblue)
# When offline/local, log emails to console; otherwise use SMTP
if OFFLINE_MODE or DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
else:
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_HOST = 'smtp-relay.brevo.com'
    EMAIL_PORT = 587
    EMAIL_USE_TLS = True
SITE_NAME = "Infiniai Assistant"
